CH 12. C++ 파일 입출력
1. 텍스트 파일과 바이너리 파일
> 텍스트 파일
: 글자, 문자로 구성된 문서
: ‘\n’, ‘\t’ 등의 특수 문자도 포함.
: 종류 ? txt, htm, iostrem, HTML, XML, C++, C, 자바 ...
: <Enter> 키 입력 시, ‘\r’, ‘\n’ 두 코드가 기록됨. 
  (아스키 코드 = ‘\r’ == 0D, ‘\n’ == 0A) (<Enter> 키 == endl)
> 바이너리 파일
: 문자, 그림, 표, 오디오, 동영상 등으로 구성된 문서
: 종류 ? jpeg, bmp, mp3, hwp, doc, ppt, obj, exe, au

2. 파일 입출력을 하기 위해 필요한 헤더 파일은? fstream
파일 읽기 시 헤더 = ifstream, 파일 쓰기 시 헤더 = ofstream

3. 파일 입출력 스트림은 파일을 프로그램과 연결
● >> 연산자와 istream의 get(), read() 함수
	키보드에 연결되면 키 입력을, 파일에 연결되면 파일에 입력. “읽기”
● << 연산자와 ostream의 put(), write() 함수
	스크린에 연결되면 화면에, 파일에 연결되면 파일에 출력. “쓰기”

> ‘<<’ 연산자를 이용한 간단한 파일 출력

ofstream fout;
fout.open(“song.txt”);
==
ofstream fout(“song.txt”);

> 파일 열기 실패 출력하는 if문 

if(!fout){
cout << “열기 실패”;
return 0; }
if(!fout) == if(!fout.is_open)


4. 키보드로 입력받아 텍스트 파일 저장하기


5. 파일 모드 지정
- 파일 열 때
: open(“파일 명”, 파일 모드)
: ifstream(“파일 명”, 파일 모드)
: ofstream(“파일 명”, 파일 모드)

- 파일 모드와 의미					- 파일 모드 설정


6. 파일 입출력 모드: 텍스트 I/O와 바이너리 I/O
> 텍스트 I/O ? 텍스트 파일에만 적용
문자 단위로 파일에 쓰고 읽기 ? 문자를 기록하고 읽은 바이트를 문자로 해석
> 바이너리 I/O ? 텍스트와 바이너리 파일 모두 입출력 가능
- 바이트 단위로 파일에 쓰고 읽기?데이터를 문자로 해석하지 않고, 그대로 기록하거나 읽음
- 데이터의 바이너리 값을 그대로 파일에 저장하거나, 파일의 바이너리 값을 그대로 읽어서     변수나 버퍼에 저장하는 방식

- 바이너리 I/O 모드 열기
: ios::binary가 설정되지 않으면 디폴드가 텍스트 I/O임.


● 텍스트 I/O와 바이너리 I/O 입출력 시 차이점
텍스트는 0x0D(‘\r’) 값을 생략하고 0x0A(‘\n’) 값만 리턴함.

7. get()을 이용한 텍스트 파일 읽기

● get()와 EOF
파일의 끝을 만나면 읽기를 멈춰야 하는데, get()가 파일 끝을 인식하는 방법은?
-> 파일의 끝에서 읽기를 시도하면 get()는 EOF(-1)을 리턴한다.

● get()으로 파일의 끝을 인지하는 방법		> 파일의 끝을 잘못 인지하는 코드
                
> 텍스트 파일 연결

8. 텍스트 파일의 라인 단위 읽기
(1) istream의 getline(char* line, int n) 함수 이용
(2) getline(ifstream& fin, string& line) 함수 이용


9. read()/write()블록 단위 파일 입출력
- get()/put() : 문자 혹은 바이트 단위로 파일 입출력
- read()/write() : 블록 단위로 파일 입출력